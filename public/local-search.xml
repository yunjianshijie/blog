<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>shell代码</title>
    <link href="/2024/03/30/shell/"/>
    <url>/2024/03/30/shell/</url>
    
    <content type="html"><![CDATA[<h2 id="代码部分"><a href="#代码部分" class="headerlink" title="代码部分"></a>代码部分</h2><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br></pre></td><td class="code"><pre><code class="hljs c"><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;dirent.h&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;errno.h&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;fcntl.h&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;linux/limits.h&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;pwd.h&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;readline/history.h&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;readline/readline.h&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;signal.h&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;stdbool.h&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;stdio.h&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;stdlib.h&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;string.h&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;sys/stat.h&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;sys/types.h&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;sys/wait.h&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;termios.h&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;time.h&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;unistd.h&gt;</span></span><br><span class="hljs-type">char</span> *<span class="hljs-title function_">read_str</span><span class="hljs-params">()</span>; <span class="hljs-comment">// 打印开头，</span><br><span class="hljs-type">void</span> <span class="hljs-title function_">cdfun</span><span class="hljs-params">(<span class="hljs-type">int</span> index, <span class="hljs-type">char</span> a[<span class="hljs-number">40</span>][<span class="hljs-number">40</span>], <span class="hljs-type">char</span> *cdhistory)</span>;<br><span class="hljs-comment">// void cut_str(char cut, char *a, char **str, int *index); //</span><br><span class="hljs-type">bool</span> <span class="hljs-title function_">shell</span><span class="hljs-params">(<span class="hljs-type">char</span> a[<span class="hljs-number">40</span>][<span class="hljs-number">40</span>], <span class="hljs-type">int</span> index, <span class="hljs-type">char</span> *cd_history)</span>;<br><span class="hljs-type">void</span> <span class="hljs-title function_">exe</span><span class="hljs-params">(<span class="hljs-type">char</span> *a, <span class="hljs-type">int</span> num_pipe)</span>; <span class="hljs-comment">//</span><br><span class="hljs-type">void</span> <span class="hljs-title function_">redirect</span><span class="hljs-params">(<span class="hljs-type">char</span> *argv[], <span class="hljs-type">int</span> argc)</span>;<br><span class="hljs-type">void</span> <span class="hljs-title function_">redirect_input</span><span class="hljs-params">(<span class="hljs-type">char</span> *file_name)</span>;<br><span class="hljs-type">void</span> <span class="hljs-title function_">redirect_output</span><span class="hljs-params">(<span class="hljs-type">char</span> *file_name, <span class="hljs-type">int</span> index)</span>;<br><span class="hljs-type">void</span> <span class="hljs-title function_">home</span><span class="hljs-params">(<span class="hljs-type">char</span> *a, <span class="hljs-type">char</span> *home)</span>;<br><span class="hljs-type">int</span> <span class="hljs-title function_">main</span><span class="hljs-params">()</span> &#123;<br>    signal(SIGINT, SIG_IGN);<br>    signal(SIGQUIT, SIG_IGN);<br>    signal(SIGTSTP, SIG_IGN); <span class="hljs-comment">// 屏蔽信号</span><br>    <span class="hljs-type">char</span> cd_history[<span class="hljs-number">300</span>];<br>    getcwd(cd_history, <span class="hljs-keyword">sizeof</span>(cd_history));<br>    <span class="hljs-keyword">while</span> (<span class="hljs-number">1</span>) &#123;<br>        <span class="hljs-type">char</span> *a = read_str(); <span class="hljs-comment">// a为</span><br>        <span class="hljs-keyword">if</span> (a == <span class="hljs-literal">NULL</span>) &#123;<br>            <span class="hljs-built_in">free</span>(a);<br>            <span class="hljs-keyword">continue</span>;<br>        &#125;<br>        <span class="hljs-type">char</span> *b = (<span class="hljs-type">char</span> *)<span class="hljs-built_in">malloc</span>(<span class="hljs-keyword">sizeof</span>(<span class="hljs-type">char</span>) * (<span class="hljs-built_in">strlen</span>(a) + <span class="hljs-number">1</span>));<br>        <span class="hljs-built_in">strcpy</span>(b, a);<br>        <span class="hljs-type">char</span> argv[<span class="hljs-number">40</span>][<span class="hljs-number">40</span>]; <span class="hljs-comment">// 分割</span><br>        <span class="hljs-type">int</span> argc = <span class="hljs-number">0</span>;<br>        <span class="hljs-type">const</span> <span class="hljs-type">char</span> delim[] = <span class="hljs-string">&quot; &quot;</span>;<br>        <span class="hljs-type">char</span> *token = strtok(a, delim);<br><br>        <span class="hljs-keyword">while</span> (token != <span class="hljs-literal">NULL</span> &amp;&amp; argc &lt; <span class="hljs-number">40</span>) &#123;<br>            <span class="hljs-built_in">strncpy</span>(argv[argc], token, <span class="hljs-keyword">sizeof</span>(argv[argc]) - <span class="hljs-number">1</span>);<br>            argv[argc][<span class="hljs-keyword">sizeof</span>(argv[argc]) - <span class="hljs-number">1</span>] = <span class="hljs-string">&#x27;\0&#x27;</span>; <span class="hljs-comment">// 确保字符串以空字符结尾</span><br>            argc++;<br>            token = strtok(<span class="hljs-literal">NULL</span>, delim);<br>        &#125;<br>        <span class="hljs-comment">// printf(&quot;zhel%d\n&quot;, argc);</span><br>        <span class="hljs-type">int</span> num_pipe = <span class="hljs-number">0</span>;<br>        <span class="hljs-keyword">for</span> (<span class="hljs-type">int</span> i = <span class="hljs-number">0</span>; i &lt; argc; i++) &#123;<br><br>            <span class="hljs-keyword">if</span> (<span class="hljs-built_in">strcmp</span>(<span class="hljs-string">&quot;|&quot;</span>, argv[i]) == <span class="hljs-number">0</span>) &#123;<br>                num_pipe++;<br>            &#125;<br>            <span class="hljs-comment">// printf(&quot;%s\n&quot;, argv[i]);</span><br>        &#125;<br>        <span class="hljs-keyword">if</span> (shell(argv, argc, cd_history)) &#123;<br>            <span class="hljs-keyword">continue</span>;<br>        &#125;<br>        exe(b, num_pipe);<br>        <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;\n&quot;</span>);<br>        <span class="hljs-built_in">free</span>(a);<br>        <span class="hljs-built_in">free</span>(b);<br>    &#125;<br><br>    <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br><br><span class="hljs-type">char</span> *<span class="hljs-title function_">read_str</span><span class="hljs-params">()</span> &#123; <span class="hljs-comment">// 打印开头</span><br>    <span class="hljs-type">char</span> *username = getlogin();<br>    <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;  \033[0;36m%s\033[0m @&quot;</span>, username); <span class="hljs-comment">// 用户名</span><br>    FILE *file = fopen(<span class="hljs-string">&quot;/proc/sys/kernel/hostname&quot;</span>, <span class="hljs-string">&quot;r&quot;</span>);<br>    <span class="hljs-keyword">if</span> (file == <span class="hljs-literal">NULL</span>) &#123;<br>        <span class="hljs-keyword">return</span> <span class="hljs-literal">NULL</span>;<br>    &#125; <span class="hljs-keyword">else</span> &#123;<br>        <span class="hljs-type">char</span> computername[<span class="hljs-number">257</span>];<br>        fgets(computername, <span class="hljs-keyword">sizeof</span>(computername), file);<br>        <span class="hljs-type">int</span> len = <span class="hljs-built_in">strlen</span>(computername);<br>        computername[len - <span class="hljs-number">1</span>] = <span class="hljs-string">&#x27;\0&#x27;</span>;<br>        <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot; \033[0;32m%s\033[0m &quot;</span>, computername); <span class="hljs-comment">// 电脑名</span><br>    &#125;<br>    <span class="hljs-class"><span class="hljs-keyword">struct</span> <span class="hljs-title">passwd</span> *<span class="hljs-title">pw</span> =</span> getpwuid(getuid());<br>    <span class="hljs-type">const</span> <span class="hljs-type">char</span> *home_dir = pw-&gt;pw_dir; <span class="hljs-comment">// 获取用户目录</span><br>    <span class="hljs-type">char</span> cwd[<span class="hljs-number">1024</span>];<br><br>    <span class="hljs-keyword">if</span> (getcwd(cwd, <span class="hljs-keyword">sizeof</span>(cwd)) != <span class="hljs-literal">NULL</span>) &#123;<br>        <span class="hljs-keyword">if</span> (<span class="hljs-built_in">strcmp</span>(pw-&gt;pw_dir, cwd) &lt;= <span class="hljs-number">0</span>) &#123;<br>            home(cwd, pw-&gt;pw_dir);<br>        &#125;<br>        <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;in \033[1;33m%s\033[0m &quot;</span>, cwd); <span class="hljs-comment">// 黄色</span><br>    &#125;<br>    <span class="hljs-type">time_t</span> rawTime;<br>    <span class="hljs-class"><span class="hljs-keyword">struct</span> <span class="hljs-title">tm</span> *<span class="hljs-title">localTime</span>;</span><br>    time(&amp;rawTime);<br>    localTime = localtime(&amp;rawTime);<br>    <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;[%02d:%02d:%02d] &quot;</span>, localTime-&gt;tm_hour, localTime-&gt;tm_min,<br>           localTime-&gt;tm_sec);<br>    <span class="hljs-type">char</span> *a = readline(<span class="hljs-string">&quot;\001\n\033[1;31m$\033[0m \002&quot;</span>);<br>    <span class="hljs-keyword">if</span> (a == <span class="hljs-literal">NULL</span> || a == <span class="hljs-string">&quot;\n&quot;</span> || a == <span class="hljs-string">&quot; &quot;</span>)<br>        <span class="hljs-keyword">return</span> <span class="hljs-literal">NULL</span>;<br>    a[<span class="hljs-built_in">strlen</span>(a)] = <span class="hljs-string">&#x27;\0&#x27;</span>;<br>    add_history(a);<br>    <span class="hljs-keyword">return</span> a;<br>&#125;<br><span class="hljs-type">void</span> <span class="hljs-title function_">cdfun</span><span class="hljs-params">(<span class="hljs-type">int</span> index, <span class="hljs-type">char</span> a[<span class="hljs-number">40</span>][<span class="hljs-number">40</span>], <span class="hljs-type">char</span> *cdhistory)</span> &#123;<br>    <span class="hljs-comment">// printf(&quot;%s\n&quot;, cdhistory);</span><br>    <span class="hljs-class"><span class="hljs-keyword">struct</span> <span class="hljs-title">passwd</span> *<span class="hljs-title">pw</span> =</span> getpwuid(getuid());<br>    <span class="hljs-type">const</span> <span class="hljs-type">char</span> *home_dir = pw-&gt;pw_dir; <span class="hljs-comment">// 获取用户目录</span><br>    <span class="hljs-keyword">if</span> (index &gt; <span class="hljs-number">2</span>) &#123;<br>        <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;cd: 没有那个文件或目录: %s&quot;</span>, a[<span class="hljs-number">1</span>]);<br>        <span class="hljs-keyword">return</span>;<br>    &#125; <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (index == <span class="hljs-number">2</span>) &#123;<br>        <span class="hljs-type">char</span> new_directory[<span class="hljs-number">256</span>];<br>        <span class="hljs-built_in">strcpy</span>(new_directory, a[<span class="hljs-number">1</span>]);<br>        <span class="hljs-type">char</span> h1[<span class="hljs-number">300</span>];<br>        getcwd(h1, <span class="hljs-keyword">sizeof</span>(h1));<br>        <span class="hljs-keyword">if</span> (chdir(new_directory) == <span class="hljs-number">0</span>) &#123;<br>            <span class="hljs-built_in">strcpy</span>(cdhistory, h1);<br>        &#125; <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (<span class="hljs-built_in">strcmp</span>(new_directory, <span class="hljs-string">&quot;-&quot;</span>) == <span class="hljs-number">0</span>) &#123;<br>            chdir(cdhistory);<br>            <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;%s\n&quot;</span>, cdhistory);<br>            <span class="hljs-built_in">strcpy</span>(cdhistory, h1);<br>        &#125; <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (<span class="hljs-built_in">strcmp</span>(new_directory, <span class="hljs-string">&quot;~&quot;</span>) == <span class="hljs-number">0</span>) &#123;<br>            chdir(home_dir);<br>            <span class="hljs-built_in">strcpy</span>(cdhistory, h1);<br>        &#125; <span class="hljs-keyword">else</span> &#123;<br>            perror(<span class="hljs-string">&quot;chdir&quot;</span>);<br>        &#125;<br>    &#125; <span class="hljs-keyword">else</span> &#123;<br>        chdir(home_dir);<br>    &#125;<br>&#125;<br><span class="hljs-type">bool</span> <span class="hljs-title function_">shell</span><span class="hljs-params">(<span class="hljs-type">char</span> a[<span class="hljs-number">40</span>][<span class="hljs-number">40</span>], <span class="hljs-type">int</span> index, <span class="hljs-type">char</span> *cd_history)</span> &#123;<br>    <span class="hljs-keyword">if</span> (<span class="hljs-built_in">strcmp</span>(a[<span class="hljs-number">0</span>], <span class="hljs-string">&quot;exit&quot;</span>) == <span class="hljs-number">0</span>) &#123;<br>        <span class="hljs-built_in">exit</span>(<span class="hljs-number">1</span>);<br>    &#125;<br>    <span class="hljs-keyword">if</span> (<span class="hljs-built_in">strcmp</span>(a[<span class="hljs-number">0</span>], <span class="hljs-string">&quot;cd&quot;</span>) == <span class="hljs-number">0</span>) &#123;<br>        cdfun(index, a, cd_history);<br>        <span class="hljs-keyword">return</span> <span class="hljs-literal">true</span>;<br>    &#125;<br>    <span class="hljs-keyword">if</span> (index == <span class="hljs-number">0</span>) &#123;<br>        <span class="hljs-keyword">return</span> <span class="hljs-literal">true</span>;<br>    &#125;<br>    <span class="hljs-keyword">return</span> <span class="hljs-literal">false</span>;<br>&#125;<br><br><span class="hljs-type">void</span> <span class="hljs-title function_">exe</span><span class="hljs-params">(<span class="hljs-type">char</span> *a, <span class="hljs-type">int</span> num_pipe)</span> &#123;<br>    <span class="hljs-type">int</span> num_com = <span class="hljs-number">0</span>;<br>    <span class="hljs-type">const</span> <span class="hljs-type">char</span> delim[] = <span class="hljs-string">&quot;|&quot;</span>;<br>    <span class="hljs-comment">// printf(&quot;a=%s\n&quot;, a);</span><br>    <span class="hljs-type">char</span> *token = strtok(a, delim);<br>    <span class="hljs-type">char</span> com[<span class="hljs-number">40</span>][<span class="hljs-number">40</span>];<br>    <span class="hljs-type">char</span> **free_1;<br>    <span class="hljs-type">int</span> free_argc;<br>    <span class="hljs-keyword">while</span> (token != <span class="hljs-literal">NULL</span>) &#123;<br>        <span class="hljs-comment">// com[num_com] = (char *)malloc(strlen(token) + 1);</span><br>        <span class="hljs-built_in">strcpy</span>(com[num_com], token);<br>        num_com++;<br>        token = strtok(<span class="hljs-literal">NULL</span>, delim);<br>        <span class="hljs-keyword">if</span> (token == <span class="hljs-literal">NULL</span>) &#123;<br>            <span class="hljs-keyword">break</span>;<br>        &#125;<br>    &#125; <span class="hljs-comment">// 隔管道</span><br>    <span class="hljs-keyword">if</span> (num_com == <span class="hljs-number">0</span>) &#123;<br>        <span class="hljs-keyword">return</span>;<br>    &#125;<br>    <span class="hljs-type">int</span> pipefd[num_com - <span class="hljs-number">1</span>][<span class="hljs-number">2</span>];<br>    <span class="hljs-keyword">for</span> (<span class="hljs-type">int</span> i = <span class="hljs-number">0</span>; i &lt; num_com - <span class="hljs-number">1</span>; i++) &#123; <span class="hljs-comment">// 创建管道</span><br>        <span class="hljs-keyword">if</span> (pipe(pipefd[i]) == <span class="hljs-number">-1</span>) &#123;<br>            perror(<span class="hljs-string">&quot;pipe&quot;</span>);<br>            <span class="hljs-built_in">exit</span>(<span class="hljs-number">4</span>);<br>        &#125;<br>    &#125;<br>    <span class="hljs-type">pid_t</span> child_pid;<br>    <span class="hljs-keyword">for</span> (<span class="hljs-type">int</span> i = <span class="hljs-number">0</span>; i &lt; num_com; i++) &#123; <span class="hljs-comment">// 进程</span><br>        <span class="hljs-keyword">if</span> ((child_pid = fork()) == <span class="hljs-number">-1</span>) &#123;<br>            perror(<span class="hljs-string">&quot;fork&quot;</span>);<br>            <span class="hljs-built_in">exit</span>(<span class="hljs-number">4</span>);<br>        &#125;                     <span class="hljs-comment">// fork();</span><br>        <span class="hljs-keyword">if</span> (child_pid == <span class="hljs-number">0</span>) &#123; <span class="hljs-comment">// 子进程里面</span><br>            <span class="hljs-keyword">if</span> (num_com != <span class="hljs-number">1</span>) &#123;<br>                <span class="hljs-keyword">if</span> (i &gt; <span class="hljs-number">0</span>) &#123;<br>                    dup2(pipefd[i - <span class="hljs-number">1</span>][<span class="hljs-number">0</span>], STDIN_FILENO);<br>                &#125; <span class="hljs-comment">// 连接前一个的写入</span><br>                <span class="hljs-keyword">if</span> (i &lt; num_com - <span class="hljs-number">1</span>) &#123;<br>                    dup2(pipefd[i][<span class="hljs-number">1</span>], STDOUT_FILENO);<br>                &#125; <span class="hljs-comment">// 自己连接读</span><br>                <span class="hljs-keyword">for</span> (<span class="hljs-type">int</span> i = <span class="hljs-number">0</span>; i &lt; num_com - <span class="hljs-number">1</span>; i++) &#123;<br>                    close(pipefd[i][<span class="hljs-number">1</span>]);<br>                    close(pipefd[i][<span class="hljs-number">0</span>]);<br>                &#125; <span class="hljs-comment">// 关闭所有管道</span><br>            &#125;     <span class="hljs-comment">// 如果有管道</span><br>            <span class="hljs-type">char</span> *argv[<span class="hljs-number">40</span>];<br>            free_1 = argv;<br>            <span class="hljs-type">int</span> argc = <span class="hljs-number">0</span>;<br>            token = strtok(com[i], <span class="hljs-string">&quot; &quot;</span>);<br>            <span class="hljs-keyword">while</span> (token != <span class="hljs-literal">NULL</span>) &#123;<br>                argv[argc] = (<span class="hljs-type">char</span> *)<span class="hljs-built_in">malloc</span>(<span class="hljs-keyword">sizeof</span>(<span class="hljs-type">char</span>) * <span class="hljs-built_in">strlen</span>(token) + <span class="hljs-number">1</span>);<br>                <span class="hljs-built_in">strcpy</span>(argv[argc++], token);<br>                token = strtok(<span class="hljs-literal">NULL</span>, <span class="hljs-string">&quot; &quot;</span>);<br>            &#125;<br>            free_argc = argc;<br>            <span class="hljs-comment">// 分割了 ，要开始execvp了</span><br>            argv[argc] = <span class="hljs-literal">NULL</span>;<br>            redirect(argv, argc);<br>            execvp(argv[<span class="hljs-number">0</span>], argv);<br>            perror(<span class="hljs-string">&quot;execvp&quot;</span>);<br>            <span class="hljs-built_in">exit</span>(EXIT_FAILURE);<br>            <span class="hljs-keyword">for</span> (<span class="hljs-type">int</span> i = <span class="hljs-number">0</span>; i &lt; free_argc; i++) &#123;<br>                <span class="hljs-built_in">free</span>(free_1[i]);<br>            &#125;<br>        &#125;<br><br>        <span class="hljs-comment">// else &#123; // 父进程</span><br><br>        <span class="hljs-comment">//     wait(NULL);</span><br>        <span class="hljs-comment">//     printf(&quot;父进程停止wait%d\n&quot;, i);</span><br>        <span class="hljs-comment">// &#125;</span><br>    &#125; <span class="hljs-comment">// 循环结束</span><br>    <span class="hljs-keyword">for</span> (<span class="hljs-type">int</span> i = <span class="hljs-number">0</span>; i &lt; num_com - <span class="hljs-number">1</span>; i++) &#123;<br>        close(pipefd[i][<span class="hljs-number">1</span>]);<br>        close(pipefd[i][<span class="hljs-number">0</span>]);<br>    &#125; <span class="hljs-comment">// 关闭</span><br>    <span class="hljs-keyword">for</span> (<span class="hljs-type">int</span> i = <span class="hljs-number">0</span>; i &lt; num_com; i++) &#123;<br>        <span class="hljs-type">pid_t</span> pid;<br>        pid = wait(<span class="hljs-literal">NULL</span>);<br>        <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;:: %d/%d\n&quot;</span>, i, num_com - <span class="hljs-number">1</span>);<br>        <span class="hljs-keyword">if</span> (<span class="hljs-built_in">strstr</span>(com[i], <span class="hljs-string">&quot;&amp;&quot;</span>))<br>            <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;%d    %s&quot;</span>, pid, com[i]);<br>    &#125;<br>&#125;<br><span class="hljs-type">void</span> <span class="hljs-title function_">redirect</span><span class="hljs-params">(<span class="hljs-type">char</span> *argv[], <span class="hljs-type">int</span> argc)</span> &#123;<br><br>    <span class="hljs-keyword">for</span> (<span class="hljs-type">int</span> i = <span class="hljs-number">0</span>; i &lt; argc; i++) &#123;<br>        <span class="hljs-keyword">if</span> (<span class="hljs-built_in">strcmp</span>(argv[i], <span class="hljs-string">&quot;&lt;&quot;</span>) == <span class="hljs-number">0</span>) &#123;<br>            redirect_input(argv[i + <span class="hljs-number">1</span>]);<br>            argv[i + <span class="hljs-number">1</span>] = <span class="hljs-literal">NULL</span>;<br>            argv[i] = <span class="hljs-literal">NULL</span>;<br>            i += <span class="hljs-number">2</span>;<br>            <span class="hljs-keyword">continue</span>;<br>        &#125;<br>        <span class="hljs-keyword">if</span> (<span class="hljs-built_in">strcmp</span>(argv[i], <span class="hljs-string">&quot;&gt;&quot;</span>) == <span class="hljs-number">0</span>) &#123;<br>            redirect_output(argv[i + <span class="hljs-number">1</span>], <span class="hljs-number">0</span>);<br>            argv[i + <span class="hljs-number">1</span>] = <span class="hljs-literal">NULL</span>;<br>            argv[i] = <span class="hljs-literal">NULL</span>;<br>            i += <span class="hljs-number">2</span>;<br>            <span class="hljs-keyword">continue</span>;<br>        &#125;<br>        <span class="hljs-keyword">if</span> (<span class="hljs-built_in">strcmp</span>(argv[i], <span class="hljs-string">&quot;&gt;&gt;&quot;</span>) == <span class="hljs-number">0</span>) &#123;<br>            redirect_output(argv[i + <span class="hljs-number">1</span>], <span class="hljs-number">1</span>);<br>            argv[i + <span class="hljs-number">1</span>] = <span class="hljs-literal">NULL</span>; <span class="hljs-comment">// argvi+1为文件</span><br>            argv[i] = <span class="hljs-literal">NULL</span>;<br>            i += <span class="hljs-number">2</span>;<br>            <span class="hljs-keyword">continue</span>;<br>        &#125;<br>    &#125;<br>&#125;<br><span class="hljs-type">void</span> <span class="hljs-title function_">redirect_input</span><span class="hljs-params">(<span class="hljs-type">char</span> *file_name)</span> &#123;<br>    <span class="hljs-type">int</span> fd = open(file_name, O_RDONLY);<br>    <span class="hljs-keyword">if</span> (dup2(fd, <span class="hljs-number">0</span>) == <span class="hljs-number">-1</span>) &#123;<br>        perror(<span class="hljs-string">&quot;dup2&quot;</span>);<br>        <span class="hljs-built_in">exit</span>(<span class="hljs-number">4</span>);<br>    &#125;<br>&#125;<br><span class="hljs-type">void</span> <span class="hljs-title function_">redirect_output</span><span class="hljs-params">(<span class="hljs-type">char</span> *file_name, <span class="hljs-type">int</span> index)</span> &#123;<br>    <span class="hljs-type">int</span> fd;<br>    <span class="hljs-keyword">if</span> (index == <span class="hljs-number">0</span>) &#123;<br>        fd = open(file_name, O_WRONLY | O_CREAT | O_TRUNC, <span class="hljs-number">0777</span>);<br>    &#125; <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (index == <span class="hljs-number">1</span>) &#123;<br>        fd = open(file_name, O_WRONLY | O_CREAT | O_APPEND, <span class="hljs-number">0644</span>);<br>    &#125;<br>    <span class="hljs-keyword">if</span> (dup2(fd, STDOUT_FILENO) == <span class="hljs-number">-1</span>) &#123;<br>        perror(<span class="hljs-string">&quot;dup2&quot;</span>);<br>    &#125;<br>    close(fd);<br>&#125;<br><span class="hljs-type">void</span> <span class="hljs-title function_">home</span><span class="hljs-params">(<span class="hljs-type">char</span> *a, <span class="hljs-type">char</span> *home)</span> &#123; <span class="hljs-comment">// 改home文件成~;</span><br>    <span class="hljs-type">int</span> lenhome = <span class="hljs-built_in">strlen</span>(home);<br>    <span class="hljs-type">int</span> len = <span class="hljs-built_in">strlen</span>(a);<br>    a[<span class="hljs-number">0</span>] = <span class="hljs-string">&#x27;~&#x27;</span>;<br>    <span class="hljs-keyword">for</span> (<span class="hljs-type">int</span> i = <span class="hljs-number">1</span>; i &lt; len - lenhome + <span class="hljs-number">1</span>; i++) &#123;<br>        a[i] = a[i + lenhome - <span class="hljs-number">1</span>];<br>    &#125;<br>    a[len - lenhome + <span class="hljs-number">1</span>] = <span class="hljs-string">&#x27;\0&#x27;</span>;<br>&#125;<br><br></code></pre></td></tr></table></figure>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>Hello World</title>
    <link href="/2024/03/04/hello-world/"/>
    <url>/2024/03/04/hello-world/</url>
    
    <content type="html"><![CDATA[<h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo new <span class="hljs-string">&quot;My New Post&quot;</span><br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo server<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo generate<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo deploy<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
    
    
    
  </entry>
  
  
  
  
</search>
